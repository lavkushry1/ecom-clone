rules_version = '2';

// Firebase Storage Security Rules for E-commerce App
service firebase.storage {
  match /b/{bucket}/o {
    
    // Public read access for product images, categories, and other public assets
    match /public/{allPaths=**} {
      allow read: if true;
      allow write: if false; // Only admin can upload via Admin SDK
    }
    
    // Product images - read by all, write by admin only
    match /products/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && 
                      exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    // Category images - read by all, write by admin only
    match /categories/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && 
                      exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    // User profile images
    match /users/{userId}/profile/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null && 
                     exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    // Order related documents (receipts, invoices)
    match /orders/{orderId}/{allPaths=**} {
      allow read: if request.auth != null && (
        // User can read their own order documents
        resource.metadata.userId == request.auth.uid ||
        // Admin can read all order documents
        exists(/databases/$(database)/documents/admins/$(request.auth.uid))
      );
      allow write: if request.auth != null && 
                      exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    // Temporary uploads (for processing)
    match /temp/{userId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId
                         && request.time < resource.timeCreated.addDuration(3600); // 1 hour limit
    }
    
    // Admin uploads
    match /admin/{allPaths=**} {
      allow read, write: if request.auth != null && 
                            exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    // Default deny rule
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
